"""correspondence DocumentRegistration

Revision ID: 8c195b320101
Revises: 7b4cbe6769dc
Create Date: 2025-09-29 16:36:02.862550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c195b320101'
down_revision: Union[str, Sequence[str], None] = '7b4cbe6769dc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registration_registration_number',
    sa.Column('prefix', sa.String(length=20), nullable=True),
    sa.Column('number', sa.String(length=20), nullable=False),
    sa.Column('postfix', sa.String(length=20), nullable=True),
    sa.Column('registrator', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_registration_registration_number'))
    )
    op.create_index('idx_reg_number_full', 'registration_registration_number', ['prefix', 'number', 'postfix'], unique=False)
    op.create_index('idx_reg_number_number_postfix', 'registration_registration_number', ['number', 'postfix'], unique=False)
    op.create_index('idx_reg_number_prefix_number', 'registration_registration_number', ['prefix', 'number'], unique=False)
    op.create_table('correspondense_document_registration',
    sa.Column('registration_number_id', sa.UUID(), nullable=True),
    sa.Column('external_registration_number', sa.String(length=30), nullable=True),
    sa.Column('external_registration_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['correspondence_document.id'], name=op.f('fk_correspondense_document_registration_document_id_correspondence_document'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['registration_number_id'], ['registration_registration_number.id'], name=op.f('fk_correspondense_document_registration_registration_number_id_registration_registration_number'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_correspondense_document_registration'))
    )
    op.create_index(op.f('ix_correspondense_document_registration_document_id'), 'correspondense_document_registration', ['document_id'], unique=False)
    op.create_index(op.f('ix_correspondense_document_registration_registration_number_id'), 'correspondense_document_registration', ['registration_number_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_correspondense_document_registration_registration_number_id'), table_name='correspondense_document_registration')
    op.drop_index(op.f('ix_correspondense_document_registration_document_id'), table_name='correspondense_document_registration')
    op.drop_table('correspondense_document_registration')
    op.drop_index('idx_reg_number_prefix_number', table_name='registration_registration_number')
    op.drop_index('idx_reg_number_number_postfix', table_name='registration_registration_number')
    op.drop_index('idx_reg_number_full', table_name='registration_registration_number')
    op.drop_table('registration_registration_number')
    # ### end Alembic commands ###
