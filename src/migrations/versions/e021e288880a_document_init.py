"""Document Init

Revision ID: e021e288880a
Revises: 
Create Date: 2025-09-25 13:19:52.043888

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e021e288880a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents_document',
    sa.Column('document_type', sa.Enum('INCOMING', 'OUTGOING', 'ASSIGNMENT', 'ASSIGNMENT_INTERNAL', 'PROTOCOL', 'ORDER', 'DIRECTIVE', 'NOTES', name='document_type_enum'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('paper_count', sa.Integer(), nullable=False),
    sa.Column('attachment_description', sa.String(length=100), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_documents_document'))
    )
    op.create_index('ix_documents_document_type', 'documents_document', ['document_type'], unique=False)
    op.create_table('registration_registration_number',
    sa.Column('prefix', sa.String(length=20), nullable=True),
    sa.Column('number', sa.String(length=20), nullable=False),
    sa.Column('postfix', sa.String(length=20), nullable=True),
    sa.Column('registrator', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_registration_registration_number'))
    )
    op.create_index('idx_reg_number_full', 'registration_registration_number', ['prefix', 'number', 'postfix'], unique=False)
    op.create_index('idx_reg_number_number_postfix', 'registration_registration_number', ['number', 'postfix'], unique=False)
    op.create_index('idx_reg_number_prefix_number', 'registration_registration_number', ['prefix', 'number'], unique=False)
    op.create_table('document_document_access',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('access_type', sa.Enum('READONLY', name='document_access_type_enum'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_document.id'], name=op.f('fk_document_document_access_document_id_documents_document'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_document_access'))
    )
    op.create_index(op.f('ix_document_document_access_document_id'), 'document_document_access', ['document_id'], unique=False)
    op.create_table('document_document_address',
    sa.Column('party_type', sa.Enum('SENDER', 'RECIPIENT', name='document_party_type_enum'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('external_user_id', sa.UUID(), nullable=True),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('is_responsible', sa.Boolean(), nullable=True),
    sa.Column('comment', sa.String(length=255), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_document.id'], name=op.f('fk_document_document_address_document_id_documents_document'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_document_address'))
    )
    op.create_index(op.f('ix_document_document_address_document_id'), 'document_document_address', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_document_address_external_user_id'), 'document_document_address', ['external_user_id'], unique=False)
    op.create_index(op.f('ix_document_document_address_organization_id'), 'document_document_address', ['organization_id'], unique=False)
    op.create_index(op.f('ix_document_document_address_party_type'), 'document_document_address', ['party_type'], unique=False)
    op.create_index(op.f('ix_document_document_address_user_id'), 'document_document_address', ['user_id'], unique=False)
    op.create_table('document_document_confidential',
    sa.Column('confidential', sa.Enum('DOCUMENT_PRIVACY_LEVEL_OFFICIAL_USE_ONLY', 'DOCUMENT_PRIVACY_LEVEL_CONFIDENTIAL', 'DOCUMENT_PRIVACY_LEVEL_COMMERCIAL_SECRET', 'DOCUMENT_PRIVACY_LEVEL_PERSONAL_DATA', name='document_confidential_enum'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_document.id'], name=op.f('fk_document_document_confidential_document_id_documents_document'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_document_confidential'))
    )
    op.create_index(op.f('ix_document_document_confidential_document_id'), 'document_document_confidential', ['document_id'], unique=False)
    op.create_table('document_document_registration',
    sa.Column('registration_number_id', sa.UUID(), nullable=True),
    sa.Column('external_registration_number', sa.String(length=30), nullable=True),
    sa.Column('external_registration_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_document.id'], name=op.f('fk_document_document_registration_document_id_documents_document'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['registration_number_id'], ['registration_registration_number.id'], name=op.f('fk_document_document_registration_registration_number_id_registration_registration_number'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_document_document_registration'))
    )
    op.create_index(op.f('ix_document_document_registration_document_id'), 'document_document_registration', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_document_registration_registration_number_id'), 'document_document_registration', ['registration_number_id'], unique=True)
    op.create_table('workflow_workflow',
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents_document.id'], name=op.f('fk_workflow_workflow_document_id_documents_document'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_workflow'))
    )
    op.create_index(op.f('ix_workflow_workflow_document_id'), 'workflow_workflow', ['document_id'], unique=False)
    op.create_table('workflow_workflow_step',
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('step_type', sa.Enum('REGISTRATION', 'AGREEMENT', 'SIGNING', 'INTRODUCTION', 'DECISION', 'EXECUTION', 'REVOKE', 'REVISION', name='step_type_enum'), nullable=False),
    sa.Column('status', sa.Enum('WAITING', 'SENDED', 'IN_WORK', 'COMPLETED', 'REJECTED', 'REVISION', name='status_map_enum'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflow_workflow.id'], name=op.f('fk_workflow_workflow_step_workflow_id_workflow_workflow'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_workflow_step'))
    )
    op.create_index(op.f('ix_workflow_workflow_step_workflow_id'), 'workflow_workflow_step', ['workflow_id'], unique=False)
    op.create_table('workflow_workflow_participant_step',
    sa.Column('workflow_step_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('WAITING', 'SENDED', 'IN_WORK', 'COMPLETED', 'REJECTED', 'REVISION', name='participant_status_enum'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_responsible', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['workflow_workflow_step.id'], name=op.f('fk_workflow_workflow_participant_step_workflow_step_id_workflow_workflow_step'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_workflow_participant_step'))
    )
    op.create_index(op.f('ix_workflow_workflow_participant_step_workflow_step_id'), 'workflow_workflow_participant_step', ['workflow_step_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workflow_workflow_participant_step_workflow_step_id'), table_name='workflow_workflow_participant_step')
    op.drop_table('workflow_workflow_participant_step')
    op.drop_index(op.f('ix_workflow_workflow_step_workflow_id'), table_name='workflow_workflow_step')
    op.drop_table('workflow_workflow_step')
    op.drop_index(op.f('ix_workflow_workflow_document_id'), table_name='workflow_workflow')
    op.drop_table('workflow_workflow')
    op.drop_index(op.f('ix_document_document_registration_registration_number_id'), table_name='document_document_registration')
    op.drop_index(op.f('ix_document_document_registration_document_id'), table_name='document_document_registration')
    op.drop_table('document_document_registration')
    op.drop_index(op.f('ix_document_document_confidential_document_id'), table_name='document_document_confidential')
    op.drop_table('document_document_confidential')
    op.drop_index(op.f('ix_document_document_address_user_id'), table_name='document_document_address')
    op.drop_index(op.f('ix_document_document_address_party_type'), table_name='document_document_address')
    op.drop_index(op.f('ix_document_document_address_organization_id'), table_name='document_document_address')
    op.drop_index(op.f('ix_document_document_address_external_user_id'), table_name='document_document_address')
    op.drop_index(op.f('ix_document_document_address_document_id'), table_name='document_document_address')
    op.drop_table('document_document_address')
    op.drop_index(op.f('ix_document_document_access_document_id'), table_name='document_document_access')
    op.drop_table('document_document_access')
    op.drop_index('idx_reg_number_prefix_number', table_name='registration_registration_number')
    op.drop_index('idx_reg_number_number_postfix', table_name='registration_registration_number')
    op.drop_index('idx_reg_number_full', table_name='registration_registration_number')
    op.drop_table('registration_registration_number')
    op.drop_index('ix_documents_document_type', table_name='documents_document')
    op.drop_table('documents_document')
    # ### end Alembic commands ###
